
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "RNCGeolocationSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_setConfiguration(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "setConfiguration", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_requestAuthorization(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "requestAuthorization", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_getCurrentPosition(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentPosition", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_startObserving(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "startObserving", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_stopObserving(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "stopObserving", "()V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeRNCGeolocationSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
}

NativeRNCGeolocationSpecJSI::NativeRNCGeolocationSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["setConfiguration"] = MethodMetadata {1, __hostFunction_NativeRNCGeolocationSpecJSI_setConfiguration};
  methodMap_["requestAuthorization"] = MethodMetadata {2, __hostFunction_NativeRNCGeolocationSpecJSI_requestAuthorization};
  methodMap_["getCurrentPosition"] = MethodMetadata {3, __hostFunction_NativeRNCGeolocationSpecJSI_getCurrentPosition};
  methodMap_["startObserving"] = MethodMetadata {1, __hostFunction_NativeRNCGeolocationSpecJSI_startObserving};
  methodMap_["stopObserving"] = MethodMetadata {0, __hostFunction_NativeRNCGeolocationSpecJSI_stopObserving};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeRNCGeolocationSpecJSI_addListener};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeRNCGeolocationSpecJSI_removeListeners};
}

std::shared_ptr<TurboModule> RNCGeolocationSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "RNCGeolocation") {
    return std::make_shared<NativeRNCGeolocationSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
